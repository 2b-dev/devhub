patch-package
--- a/node_modules/react-spring/native-hooks.cjs.js
+++ b/node_modules/react-spring/native-hooks.cjs.js
@@ -715,6 +715,23 @@ function interpolateTo(props) {
     to: forward
   }, rest);
 }
+function handleRef(ref, forward) {
+  if (forward) {
+    // If it's a function, assume it's a ref callback
+    if (typeof forward === 'function') forward(ref);else if (typeof forward === 'object') {
+      // If it's an object and has a 'current' property, assume it's a ref object
+      forward.current = ref;
+    }
+  }
+
+  return ref;
+}
+function flattenDeep(array) {
+  var items = toArray(array);
+  return items.reduce(function (result, item) {
+    return Array.isArray(item) ? result.concat(flattenDeep(item)) : result.concat(item);
+  }, []);
+}
 
 var Controller =
 /*#__PURE__*/
@@ -954,6 +971,104 @@ function (_AnimatedObjectWithCh) {
   return AnimatedProps;
 }(AnimatedObjectWithChildren);
 
+function createAnimatedComponent(Component) {
+  var AnimatedComponent =
+  /*#__PURE__*/
+  function (_React$Component) {
+    _inheritsLoose(AnimatedComponent, _React$Component);
+
+    function AnimatedComponent(props) {
+      var _this;
+
+      _this = _React$Component.call(this) || this;
+
+      _this.callback = function () {
+        if (_this.node) {
+          var didUpdate = applyAnimatedValues.fn(_this.node, _this.propsAnimated.getAnimatedValue(), _assertThisInitialized(_assertThisInitialized(_this)));
+          if (didUpdate === false) _this.forceUpdate();
+        }
+      };
+
+      _this.attachProps(props);
+
+      return _this;
+    }
+
+    var _proto = AnimatedComponent.prototype;
+
+    _proto.componentWillUnmount = function componentWillUnmount() {
+      this.propsAnimated && this.propsAnimated.detach();
+    };
+
+    _proto.setNativeProps = function setNativeProps(props) {
+      var didUpdate = applyAnimatedValues.fn(this.node, props, this);
+      if (didUpdate === false) this.forceUpdate();
+    } // The system is best designed when setNativeProps is implemented. It is
+    // able to avoid re-rendering and directly set the attributes that
+    // changed. However, setNativeProps can only be implemented on leaf
+    // native components. If you want to animate a composite component, you
+    // need to re-render it. In this case, we have a fallback that uses
+    // forceUpdate.
+    ;
+
+    _proto.attachProps = function attachProps(_ref) {
+      var forwardRef = _ref.forwardRef,
+          nextProps = _objectWithoutPropertiesLoose(_ref, ["forwardRef"]);
+
+      var oldPropsAnimated = this.propsAnimated;
+      this.propsAnimated = new AnimatedProps(nextProps, this.callback); // When you call detach, it removes the element from the parent list
+      // of children. If it goes to 0, then the parent also detaches itself
+      // and so on.
+      // An optimization is to attach the new elements and THEN detach the old
+      // ones instead of detaching and THEN attaching.
+      // This way the intermediate state isn't to go to 0 and trigger
+      // this expensive recursive detaching to then re-attach everything on
+      // the very next operation.
+
+      oldPropsAnimated && oldPropsAnimated.detach();
+    };
+
+    _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {
+      var style = props.style,
+          nextProps = _objectWithoutPropertiesLoose(props, ["style"]);
+
+      var _this$props = this.props,
+          currentStyle = _this$props.style,
+          currentProps = _objectWithoutPropertiesLoose(_this$props, ["style"]);
+
+      if (!shallowEqual(currentProps, nextProps) || !shallowEqual(currentStyle, style)) {
+        this.attachProps(props);
+        return true;
+      }
+
+      return false;
+    };
+
+    _proto.render = function render() {
+      var _this2 = this;
+
+      var _this$propsAnimated$g = this.propsAnimated.getValue(),
+          scrollTop = _this$propsAnimated$g.scrollTop,
+          scrollLeft = _this$propsAnimated$g.scrollLeft,
+          animatedProps = _objectWithoutPropertiesLoose(_this$propsAnimated$g, ["scrollTop", "scrollLeft"]);
+
+      return React__default.createElement(Component, _extends({}, animatedProps, {
+        ref: function ref(node) {
+          return _this2.node = handleRef(node, _this2.props.forwardRef);
+        }
+      }));
+    };
+
+    return AnimatedComponent;
+  }(React__default.Component);
+
+  return React__default.forwardRef(function (props, ref) {
+    return React__default.createElement(AnimatedComponent, _extends({}, props, {
+      forwardRef: ref
+    }));
+  });
+}
+
 var config = {
   default: {
     tension: 170,
@@ -1459,8 +1574,8 @@ function (_AnimatedWithChildren) {
     var _this;
 
     _this = _AnimatedWithChildren.call(this) || this;
-    _this.payload = styles.map(function (style) {
-      return new AnimatedStyle(style);
+    _this.payload = flattenDeep(styles).map(function (style) {
+      return typeof style === 'number' ? style : new AnimatedStyle(style);
     });
     return _this;
   }
@@ -1469,12 +1584,14 @@ function (_AnimatedWithChildren) {
 
   _proto.getValue = function getValue() {
     return this.payload.map(function (style) {
-      return style.getValue();
+      return typeof style === 'number' ? style : style.getValue();
     });
   };
 
   _proto.getAnimatedValue = function getAnimatedValue() {
-    return this.payload.map(function (style) {
+    return this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).map(function (style) {
       return style.getAnimatedValue();
     });
   };
@@ -1482,7 +1599,9 @@ function (_AnimatedWithChildren) {
   _proto.attach = function attach() {
     var _this2 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.addChild(_this2);
     });
   };
@@ -1490,7 +1609,9 @@ function (_AnimatedWithChildren) {
   _proto.detach = function detach() {
     var _this3 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.removeChild(_this3);
     });
   };
@@ -2372,12 +2493,14 @@ injectApplyAnimatedValues(function (instance, props) {
     transform: new AnimatedTransform(style.transform)
   });
 });
-injectCreateAnimatedStyle(function (styles) {
-  return Array.isArray(styles) ? new AnimatedStyles(styles) : new AnimatedStyle(styles);
+injectCreateAnimatedStyle(function (style) {
+  if (typeof style === 'number') return new AnimatedStyles([style]);
+  if (Array.isArray(style)) return new AnimatedStyles(style);
+  return new AnimatedStyle(style);
 });
 
 exports.config = config;
-exports.animated = extendedAnimated;
+exports.animated = createAnimatedComponent;
 exports.interpolate = interpolate$1;
 exports.Globals = Globals;
 exports.useSpring = useSpring;
new file mode 100644
--- /dev/null
+++ b/node_modules/react-spring/native-hooks.d.ts
@@ -0,0 +1 @@
+export * from './hooks'
--- a/node_modules/react-spring/native-hooks.js
+++ b/node_modules/react-spring/native-hooks.js
@@ -708,6 +708,23 @@ function interpolateTo(props) {
     to: forward
   }, rest);
 }
+function handleRef(ref, forward) {
+  if (forward) {
+    // If it's a function, assume it's a ref callback
+    if (typeof forward === 'function') forward(ref);else if (typeof forward === 'object') {
+      // If it's an object and has a 'current' property, assume it's a ref object
+      forward.current = ref;
+    }
+  }
+
+  return ref;
+}
+function flattenDeep(array) {
+  var items = toArray(array);
+  return items.reduce(function (result, item) {
+    return Array.isArray(item) ? result.concat(flattenDeep(item)) : result.concat(item);
+  }, []);
+}
 
 var Controller =
 /*#__PURE__*/
@@ -947,6 +964,104 @@ function (_AnimatedObjectWithCh) {
   return AnimatedProps;
 }(AnimatedObjectWithChildren);
 
+function createAnimatedComponent(Component) {
+  var AnimatedComponent =
+  /*#__PURE__*/
+  function (_React$Component) {
+    _inheritsLoose(AnimatedComponent, _React$Component);
+
+    function AnimatedComponent(props) {
+      var _this;
+
+      _this = _React$Component.call(this) || this;
+
+      _this.callback = function () {
+        if (_this.node) {
+          var didUpdate = applyAnimatedValues.fn(_this.node, _this.propsAnimated.getAnimatedValue(), _assertThisInitialized(_assertThisInitialized(_this)));
+          if (didUpdate === false) _this.forceUpdate();
+        }
+      };
+
+      _this.attachProps(props);
+
+      return _this;
+    }
+
+    var _proto = AnimatedComponent.prototype;
+
+    _proto.componentWillUnmount = function componentWillUnmount() {
+      this.propsAnimated && this.propsAnimated.detach();
+    };
+
+    _proto.setNativeProps = function setNativeProps(props) {
+      var didUpdate = applyAnimatedValues.fn(this.node, props, this);
+      if (didUpdate === false) this.forceUpdate();
+    } // The system is best designed when setNativeProps is implemented. It is
+    // able to avoid re-rendering and directly set the attributes that
+    // changed. However, setNativeProps can only be implemented on leaf
+    // native components. If you want to animate a composite component, you
+    // need to re-render it. In this case, we have a fallback that uses
+    // forceUpdate.
+    ;
+
+    _proto.attachProps = function attachProps(_ref) {
+      var forwardRef = _ref.forwardRef,
+          nextProps = _objectWithoutPropertiesLoose(_ref, ["forwardRef"]);
+
+      var oldPropsAnimated = this.propsAnimated;
+      this.propsAnimated = new AnimatedProps(nextProps, this.callback); // When you call detach, it removes the element from the parent list
+      // of children. If it goes to 0, then the parent also detaches itself
+      // and so on.
+      // An optimization is to attach the new elements and THEN detach the old
+      // ones instead of detaching and THEN attaching.
+      // This way the intermediate state isn't to go to 0 and trigger
+      // this expensive recursive detaching to then re-attach everything on
+      // the very next operation.
+
+      oldPropsAnimated && oldPropsAnimated.detach();
+    };
+
+    _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {
+      var style = props.style,
+          nextProps = _objectWithoutPropertiesLoose(props, ["style"]);
+
+      var _this$props = this.props,
+          currentStyle = _this$props.style,
+          currentProps = _objectWithoutPropertiesLoose(_this$props, ["style"]);
+
+      if (!shallowEqual(currentProps, nextProps) || !shallowEqual(currentStyle, style)) {
+        this.attachProps(props);
+        return true;
+      }
+
+      return false;
+    };
+
+    _proto.render = function render() {
+      var _this2 = this;
+
+      var _this$propsAnimated$g = this.propsAnimated.getValue(),
+          scrollTop = _this$propsAnimated$g.scrollTop,
+          scrollLeft = _this$propsAnimated$g.scrollLeft,
+          animatedProps = _objectWithoutPropertiesLoose(_this$propsAnimated$g, ["scrollTop", "scrollLeft"]);
+
+      return React.createElement(Component, _extends({}, animatedProps, {
+        ref: function ref(node) {
+          return _this2.node = handleRef(node, _this2.props.forwardRef);
+        }
+      }));
+    };
+
+    return AnimatedComponent;
+  }(React.Component);
+
+  return React.forwardRef(function (props, ref) {
+    return React.createElement(AnimatedComponent, _extends({}, props, {
+      forwardRef: ref
+    }));
+  });
+}
+
 var config = {
   default: {
     tension: 170,
@@ -1452,8 +1567,8 @@ function (_AnimatedWithChildren) {
     var _this;
 
     _this = _AnimatedWithChildren.call(this) || this;
-    _this.payload = styles.map(function (style) {
-      return new AnimatedStyle(style);
+    _this.payload = flattenDeep(styles).map(function (style) {
+      return typeof style === 'number' ? style : new AnimatedStyle(style);
     });
     return _this;
   }
@@ -1462,12 +1577,14 @@ function (_AnimatedWithChildren) {
 
   _proto.getValue = function getValue() {
     return this.payload.map(function (style) {
-      return style.getValue();
+      return typeof style === 'number' ? style : style.getValue();
     });
   };
 
   _proto.getAnimatedValue = function getAnimatedValue() {
-    return this.payload.map(function (style) {
+    return this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).map(function (style) {
       return style.getAnimatedValue();
     });
   };
@@ -1475,7 +1592,9 @@ function (_AnimatedWithChildren) {
   _proto.attach = function attach() {
     var _this2 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.addChild(_this2);
     });
   };
@@ -1483,7 +1602,9 @@ function (_AnimatedWithChildren) {
   _proto.detach = function detach() {
     var _this3 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.removeChild(_this3);
     });
   };
@@ -2365,8 +2486,10 @@ injectApplyAnimatedValues(function (instance, props) {
     transform: new AnimatedTransform(style.transform)
   });
 });
-injectCreateAnimatedStyle(function (styles) {
-  return Array.isArray(styles) ? new AnimatedStyles(styles) : new AnimatedStyle(styles);
+injectCreateAnimatedStyle(function (style) {
+  if (typeof style === 'number') return new AnimatedStyles([style]);
+  if (Array.isArray(style)) return new AnimatedStyles(style);
+  return new AnimatedStyle(style);
 });
 
-export { config, extendedAnimated as animated, interpolate$1 as interpolate, Globals, useSpring, useTrail, useTransition, useKeyframes, useChain, useSprings };
+export { config, createAnimatedComponent as animated, interpolate$1 as interpolate, Globals, useSpring, useTrail, useTransition, useKeyframes, useChain, useSprings };
--- a/node_modules/react-spring/native.cjs.js
+++ b/node_modules/react-spring/native.cjs.js
@@ -739,6 +739,12 @@ function handleRef(ref, forward) {
 
   return ref;
 }
+function flattenDeep(array) {
+  var items = toArray(array);
+  return items.reduce(function (result, item) {
+    return Array.isArray(item) ? result.concat(flattenDeep(item)) : result.concat(item);
+  }, []);
+}
 
 var Controller =
 /*#__PURE__*/
@@ -2306,8 +2312,8 @@ function (_AnimatedWithChildren) {
     var _this;
 
     _this = _AnimatedWithChildren.call(this) || this;
-    _this.payload = styles.map(function (style) {
-      return new AnimatedStyle(style);
+    _this.payload = flattenDeep(styles).map(function (style) {
+      return typeof style === 'number' ? style : new AnimatedStyle(style);
     });
     return _this;
   }
@@ -2316,12 +2322,14 @@ function (_AnimatedWithChildren) {
 
   _proto.getValue = function getValue() {
     return this.payload.map(function (style) {
-      return style.getValue();
+      return typeof style === 'number' ? style : style.getValue();
     });
   };
 
   _proto.getAnimatedValue = function getAnimatedValue() {
-    return this.payload.map(function (style) {
+    return this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).map(function (style) {
       return style.getAnimatedValue();
     });
   };
@@ -2329,7 +2337,9 @@ function (_AnimatedWithChildren) {
   _proto.attach = function attach() {
     var _this2 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.addChild(_this2);
     });
   };
@@ -2337,7 +2347,9 @@ function (_AnimatedWithChildren) {
   _proto.detach = function detach() {
     var _this3 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.removeChild(_this3);
     });
   };
@@ -2355,8 +2367,10 @@ injectApplyAnimatedValues(function (instance, props) {
     transform: new AnimatedTransform(style.transform)
   });
 });
-injectCreateAnimatedStyle(function (styles) {
-  return Array.isArray(styles) ? new AnimatedStyles(styles) : new AnimatedStyle(styles);
+injectCreateAnimatedStyle(function (style) {
+  if (typeof style === 'number') return new AnimatedStyles([style]);
+  if (Array.isArray(style)) return new AnimatedStyles(style);
+  return new AnimatedStyle(style);
 });
 
 exports.Spring = Spring;
--- a/node_modules/react-spring/native.js
+++ b/node_modules/react-spring/native.js
@@ -732,6 +732,12 @@ function handleRef(ref, forward) {
 
   return ref;
 }
+function flattenDeep(array) {
+  var items = toArray(array);
+  return items.reduce(function (result, item) {
+    return Array.isArray(item) ? result.concat(flattenDeep(item)) : result.concat(item);
+  }, []);
+}
 
 var Controller =
 /*#__PURE__*/
@@ -2299,8 +2305,8 @@ function (_AnimatedWithChildren) {
     var _this;
 
     _this = _AnimatedWithChildren.call(this) || this;
-    _this.payload = styles.map(function (style) {
-      return new AnimatedStyle(style);
+    _this.payload = flattenDeep(styles).map(function (style) {
+      return typeof style === 'number' ? style : new AnimatedStyle(style);
     });
     return _this;
   }
@@ -2309,12 +2315,14 @@ function (_AnimatedWithChildren) {
 
   _proto.getValue = function getValue() {
     return this.payload.map(function (style) {
-      return style.getValue();
+      return typeof style === 'number' ? style : style.getValue();
     });
   };
 
   _proto.getAnimatedValue = function getAnimatedValue() {
-    return this.payload.map(function (style) {
+    return this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).map(function (style) {
       return style.getAnimatedValue();
     });
   };
@@ -2322,7 +2330,9 @@ function (_AnimatedWithChildren) {
   _proto.attach = function attach() {
     var _this2 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.addChild(_this2);
     });
   };
@@ -2330,7 +2340,9 @@ function (_AnimatedWithChildren) {
   _proto.detach = function detach() {
     var _this3 = this;
 
-    this.payload.forEach(function (style) {
+    this.payload.filter(function (style) {
+      return typeof style !== 'number';
+    }).forEach(function (style) {
       return style.removeChild(_this3);
     });
   };
@@ -2348,8 +2360,10 @@ injectApplyAnimatedValues(function (instance, props) {
     transform: new AnimatedTransform(style.transform)
   });
 });
-injectCreateAnimatedStyle(function (styles) {
-  return Array.isArray(styles) ? new AnimatedStyles(styles) : new AnimatedStyle(styles);
+injectCreateAnimatedStyle(function (style) {
+  if (typeof style === 'number') return new AnimatedStyles([style]);
+  if (Array.isArray(style)) return new AnimatedStyles(style);
+  return new AnimatedStyle(style);
 });
 
 export { Spring, Keyframes, Transition, Trail, Controller, config, createAnimatedComponent as animated, interpolate$1 as interpolate, Globals };
